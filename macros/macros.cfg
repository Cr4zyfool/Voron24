#####################################################################
#	Macros
#####################################################################

#####################################################################
# The following status macros are available for Stealthburner LED:
#    STATUS_OFF                 ; All off
#    STATUS_READY               ; White logo and red nozzle
#    STATUS_BUSY                ; Red logo and white nozzle
#    STATUS_HEATING             ; Yellow logo and nozzle
#    STATUS_LEVELING            ; Pink logo and white nozzle
#    STATUS_HOMING              ; Cyan logo and white nozzle
#    STATUS_CLEANING            ; Blue logo and white nozzle
#    STATUS_MESHING             ; Green logo and white nozzle
#    STATUS_CALIBRATING_Z       ; Magenta logo and white nozzle
#    STATUS_PRINTING            ; Red logo and white nozzle
# With additional macros for direct control:
#    SET_NOZZLE_LEDS_ON
#    SET_NOZZLE_LEDS_OFF
#    SET_LOGO_LEDS_OFF
#####################################################################


[gcode_macro test]
variable_bucket_pos: 1  #placeholder
gcode:
    M117 Extruding
    M83
    G1 E10 F120
    M117 Done

#SET_GCODE_VARIABLE MACRO=test VARIABLE=bucket_pos VALUE={(range(2) | random)}
    #SET_GCODE_VARIABLE MACRO=test VARIABLE=bucket_pos VALUE=5 #{printer.toolhead.axis_maximum.x/2}
    #RESPOND MSG={bucket_pos}
    #RESPOND MSG={printer.toolhead.axis_maximum.x/2}
    #RESPOND MSG = {printer.toolhead.axis_minimum.y+5}
    #action_respond_info("Pause zhop exceeds maximum Z height.")
    #{ action_respond_info("Pause zhop exceeds maximum Z height.") }


[gcode_macro HOMEALL]
gcode:


[gcode_macro G32]
gcode:

    STATUS_HOMING #SB LED
    G28
    BED_MESH_CLEAR

    STATUS_LEVELING #StealthBurner LED
    QUAD_GANTRY_LEVEL
    STATUS_READY #StealthBurner LED

    BED_MESH_PROFILE LOAD=default

    STATUS_HOMING #StealthBurner LED
    G28 X Y
    #CLEAN_NOZZLE                   
    G28 Z
    STATUS_READY #StealthBurner LED

    G90                            ; absolute positioning
    G0 X150 Y150 Z30 F6000         ; return to center of bed


    #--------------------------------------------------------------------

#TEMPERATURE_WAIT SENSOR="temperature_fan exhaust_fan" MINIMUM=45

#####################################################################################################

[delayed_gcode Light_OFF]
gcode:
	Daylight_off

[delayed_gcode EXHAUST_OFF]
gcode:
	SET_FAN_SPEED FAN=Exhaust SPEED=0

[delayed_gcode DELAYED_OFF]
gcode:
	OFF  																								; call "OFF" macro, to turn off everything (heaters, motors, lights, fans)
	 
[gcode_macro PURGE_LINE]
gcode:
    G90 													 											; absolute positioning
    #RESPOND MSG="PurgeLine Ensure HotEnd is at 245"
    #M109 S245																							; Make sure extruder is at temp in case macro is called separately.  Set and Wait
    G92 E0                              																; reset Extruder
	G1 X5 Y20 Z0.25 F19500.0           																	; move to start position
	G1 X5 Y200.0 Z0.25 F1500.0 E15     																	; draw the first line
	G92 E0                              																; reset Extruder
	G1 Z2.0 F3000                       																; move Z Axis up
    G1 E-3 F500 #retract filament 3mm
    PARKBED

[gcode_macro PURGE1]
gcode:
    G90 #absolute positioning
    #RESPOND MSG="PurgeLine Ensure HotEnd is at 245"
    #M109 S245 #Make sure extruder is at temp in case macro is called separately.  Set and Wait
    G92 E0                              																; reset Extruder
	G1 X20 Y0 Z0.25 F19500.0           																	; move to start position
	G1 X200 Y0 Z0.25 F1500.0 E15     																	; draw the first line
	G92 E0                              																; reset Extruder
	G1 Z2.0 F3000                       																; move Z Axis up
    G1 E-3 F500 #retract filament 3mm
    PARKBED


######################### FILAMENT #########################

[gcode_macro UNLOAD_FILAMENT]
gcode:
	SAVE_GCODE_STATE NAME=UNLOADFILAMENT
	M83                                   ; set extruder to relative
    M117 Unloading
	G1 E10 F600                           ; extrude a little to soften tip 
	G1 E-100 F1800                        ; retract filament completely
    M117
	RESTORE_GCODE_STATE NAME=UNLOADFILAMENT

[gcode_macro RETRACT_FILAMENT]
gcode:
	SAVE_GCODE_STATE NAME=LOADFILAMENT
	M83 #set extruder to relative
	G1 E-40 F1800
	RESTORE_GCODE_STATE NAME=LOADFILAMENT

[gcode_macro LOAD_FILAMENT]
gcode:
	SAVE_GCODE_STATE NAME=LOADFILAMENT
	M83 ; set extruder to relative
    M117 Loading	
    G1 E100 F300 #load 120mm
    G1 E-5 F1000 #retract filament 5mm
    M117
	RESTORE_GCODE_STATE NAME=LOADFILAMENT

[gcode_macro HOT_UNLOAD]
gcode:
	# Parameters
	{% set t = params.T|default(245)|int %}

    M117 Hot_Unload #set message on display
	M104 S{t}
	PARKFRONT
	M109 S{t}
    UNLOAD_FILAMENT
    M117 #clear message on display
	
[gcode_macro HOT_LOAD]
gcode:
	# Parameters
	{% set t = params.T|default(245)|int %}

    M117 Hot_Load #set message on display
	M104 S{t}
	PARKFRONT
	M109 S{t}
    LOAD_FILAMENT
    M117 #clear message on display

######################### CONDITIONAL HOMING #########################

# Conditional G28 (home if not already homed)
[gcode_macro CG28]
gcode:
	{% if "xyz" not in printer.toolhead.homed_axes %}
		G28
	{% endif %}
	
# Conditional G28 (home if not already homed)
[gcode_macro XYCG28]
gcode:
	{% if "xy" not in printer.toolhead.homed_axes %}
		G28 X Y
	{% endif %}

[gcode_macro ZCG28]
gcode:
	{% if "z" not in printer.toolhead.homed_axes %}
		G28 Z
	{% endif %}

######################### PAUSE/RESUME/CANCEL #########################
[gcode_macro M600]
gcode:
    #LCDRGB R=0 G=1 B=0  ; Turn LCD green
    PAUSE                ; Pause

#  #default is in mainsail.cfg
# [gcode_macro CANCEL_PRINT]
# rename_existing: BASE_CANCEL_PRINT
# gcode:
#     SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
#     CLEAR_PAUSE
#     SDCARD_RESET_FILE
#     PRINT_END
#     BASE_CANCEL_PRINT

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
  {% set x_park = printer.toolhead.axis_maximum.x/2 %}
  {% set y_park = printer.toolhead.axis_minimum.y+5 %}
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 5.0) %}
      {% set z_safe = 10.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  G92 E0
  {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}                                                
    G1 E-1.0 F1500.0 #Retract 1mm
  {% else %}     
    RESPOND MSG="DeBug: Retraction Skipped due to Cold Hotend (Testing)"
  {% endif %}  
  G90 #absolute positioning
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91 #relative positioning
  G1 Z{z_safe} F900
  G90 #absolute positioning
  G0 X{x_park} Y{y_park} F6000 #park toolhead

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
  RESTORE_GCODE_STATE NAME=PAUSE_state
  G90 #absolute positioning
  BASE_RESUME

# [gcode_macro PAUSE]
# rename_existing: BASE_PAUSE
# gcode:
#     # Parameters
#     {% set z = params.Z|default(10)|int %}                                                   ; z hop amount
    
#     {% if printer['pause_resume'].is_paused|int == 0 %}     
#         SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
#         SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro
                                
#         #SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0                                  ; disable filament sensor       
#         SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume                
#         BASE_PAUSE                                                                           ; pause print
#         {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
#             G91                                                                              ; relative positioning
#             G1 Z{z} F900                                                                     ; raise Z up by z hop amount
#         {% else %}
#             { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
#             SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
#         {% endif %}
#         G90                                                                                  ; absolute positioning
#         G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
#         SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
#         M104 S0                                                                              ; turn off hotend
#         SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
#     {% endif %}

# [gcode_macro RESUME]
# rename_existing: BASE_RESUME
# variable_zhop: 0
# variable_etemp: 0
# gcode:
#     # Parameters
#     {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)
    
#     {% if printer['pause_resume'].is_paused|int == 1 %}
#         #SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1                          ; enable filament sensor
#         #RESETRGB                                                                    ; reset LCD color
#         SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
#         {% if etemp > 0 %}
#             M109 S{etemp|int}                                                        ; wait for hotend to heat back up
#         {% endif %}
#         RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)  
#         G91                                                                          ; relative positioning
#         M83                                                                          ; relative extruder positioning
#         {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}                                                
#             G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
#         {% else %}                      
#             G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
#         {% endif %}                             
#         RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
#         BASE_RESUME                                                                  ; resume print
#     {% endif %}





	



######################### MISC #########################
[gcode_macro HEATSOAK]
gcode:
  G90 #set absolute positioning
  G28 #home all axis
  G0 X145 Y150 Z50 F3600 #Move hotend a sufficent distance from heated bed for heat soak
  M106 S205 #set parts fan to 80%, helps circulate chamber air
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=110 #For ABS





######################### ALIASES/SHORTCUTS #########################

[gcode_macro QGL]
gcode:
	BED_MESH_CLEAR
    CG28 #G28 if needed
    STATUS_LEVELING #SB Led
	QUAD_GANTRY_LEVEL
    g28 z
    G1 Z50
    STATUS_READY #SB Led
	
[gcode_macro BMC]
gcode:
    STATUS_MESHING #SB LED
    M117 Meshing #set message on display
	BED_MESH_CALIBRATE
	STATUS_READY #SB LED
    M117 #Clear display Message

# Convert Marlin linear advance commands to SET_PRESSURE_ADVANCE.
# Used in conjunction with Marlin's linear advance calibration tool: https://marlinfw.org/tools/lin_advance/k-factor.html
[gcode_macro M900]
gcode:
	# Parameters
	{% set k = params.K|default(0)|float %}
	
	SET_PRESSURE_ADVANCE ADVANCE={k}

# Just a shortcut to turn EVERYTHING off with one command (beds, heaters, motors, lights)
[gcode_macro OFF]
gcode:
	M84												; turn steppers off
    TURN_OFF_HEATERS								; turn bed / hotend off
    M107                         	   			 	; turn print cooling fan off
	SET_FAN_SPEED FAN=Exhaust SPEED=0  				; turn exhaust fan off
	SET_FAN_SPEED FAN=BedOuter SPEED=0				; bed fan off
	SET_FAN_SPEED FAN=BedInner SPEED=0				; bed fan off
	SET_PIN PIN=caselight VALUE=0					; turn light off
